version: '3.7'
services:
    app:
        build:
            context: ./app
            dockerfile: Dockerfile
        container_name: app
        volumes:
            - ./app/www/:/var/www/app/
        working_dir: /var/www/app/
        networks:
            - app-network

    app-nginx:
        build:
            context: docker/app-nginx
            dockerfile: Dockerfile
        container_name: app-nginx
        volumes:
            - ./hosts/app:/etc/nginx/conf.d
            - ./app/www:/var/www/app
        ports:
            - "8080:80"
        networks:
            - app-network

    db:
        image: mysql:5.7.22
        container_name: db
        ports:
            - "3306:3306"
        volumes:
            - ./docker/mysql/mysql_data/db:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=root
            - MYSQL_USER=root
            - MYSQL_PASSWORD=root
            - MYSQL_DATABASE=library_searcher
        networks:
            - app-network

    rabbitmq:
        image: "rabbitmq:3-management-alpine"
        container_name: rabbitmq
        #restart: always
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - ./docker/rabbitmq/data/:/var/lib/rabbitmq/mnesia/
            - ./docker/rabbitmq/log/:/var/log/rabbitmq/mnesia/
        networks:
            - app-network

    elastic:
        image: elasticsearch:8.4.1
        command: elasticsearch
        volumes:
            - ./docker/esdata:/usr/share/elasticsearch/data
        container_name: elasticsearch
        hostname: elasticsearch
        deploy:
            resources:
                limits:
                    cpus: "0.50"
                    memory: "6144M"
        restart: always
        ports:
            - "9200:9200"
            - "9300:9300"
networks:
    app-network:
        driver: bridge

